<?php

/**
 * Prepares variables for `html.html.twig`.
 */
// function washco_preprocess_html(&$variables) {
//   $variables['attributes']['class'][] = 'gas';
// }


// Set all custom theme setting variables for Twig usage.
use Drupal\Core\Cache\CacheableMetadata;
function _WASHCO_extend_variables(&$variables){
  // Add cachability metadata.
  $washco = \Drupal::theme()->getActiveTheme()->getName();
  $theme_settings = \Drupal::config($washco . '.settings');
  CacheableMetadata::createFromRenderArray($variables)
    ->addCacheableDependency($theme_settings)
    ->applyTo($variables);
  // Union all theme setting variables to the twig template variables.
  $variables += $theme_settings->getOriginal();
}


/**
 * Implements template_preprocess_region().
 */
function washco_preprocess_region(&$variables) {

  // if (isset($variables['region']) && $variables['region'] == 'header') {
  //   $variables['attributes']['class'][] = 'header-section';
  // }

  // if (isset($variables['region']) && $variables['region'] == 'content') {
  //   $variables['attributes']['class'][] = 'content-section';
  // }

}


// Allow for custom templates for custom block bundle types
function washco_theme_suggestions_block_alter(array &$suggestions, array $variables)
{
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }

}

function washco_preprocess_views_view_unformatted(&$variables){
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      // You can get nid and anything else you need from the node object.
      $variables["nid"] = $node->id();
    }
    _WASHCO_extend_variables($variables);
}

// function washco_preprocess_views_view_fields(&$variables) {
//   $variables['now'] = time();
//   _WASHCO_extend_variables($variables);
// }

function washco_preprocess_html(&$variables) {
  $variables['site_name'] = \Drupal::config('system.site')->get('name');

  $variables["nnn"] = 'tests';

  if ($node = \Drupal::request()->attributes->get('node')) {
    if (is_string($node)) {
      $node_id = $node;
    }
    else {
      $node_id = $node->id();
    }

    /** @variables \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
    $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
    $links = $menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $node_id]);

    /** @variables \Drupal\Core\Menu\MenuLinkInterface $link */
    $link = array_pop($links);

    /** @variables \Drupal\Core\Menu\MenuLinkInterface $parent */
    if ($link){
      if ($link->getParent() && $parent = $menu_link_manager->createInstance($link->getParent())) {
        $route = $parent->getUrlObject()->getRouteParameters();
        $variables["nnn"] = $parent->getTitle();
      }
    }
  }
  _WASHCO_extend_variables($variables);
}

function washco_preprocess_block(&$variables) {

  $variables["nnn"] = 'tests';

  if ($node = \Drupal::request()->attributes->get('node')) {
    if (is_string($node)) {
      $node_id = $node;
    }
    else {
      $node_id = $node->id();
    }

    /** @variables \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
    $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
    $links = $menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $node_id]);

    /** @variables \Drupal\Core\Menu\MenuLinkInterface $link */
    $link = array_pop($links);

    /** @variables \Drupal\Core\Menu\MenuLinkInterface $parent */
    if ($link){
      if ($link->getParent() && $parent = $menu_link_manager->createInstance($link->getParent())) {
        $route = $parent->getUrlObject()->getRouteParameters();
        $variables["nnn"] = $parent->getTitle();
      }
    }
  }


  _WASHCO_extend_variables($variables);
}
